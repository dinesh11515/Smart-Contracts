{
	"id": "56ec8c9c771eba1d4d046420a501d3b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"EtherWallet.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ncontract EtherWallet {\n\n    address payable public owner;\n\n    event Deposit(address indexed account, uint amount);\n    event Withdraw(address indexed account, uint amount);\n\n    constructor(){\n        owner = payable(msg.sender);\n    }\n\n    modifier onlyOwner(){\n        require(owner == msg.sender);\n        _;\n    }\n\n    function getBalance() public returns(uint){\n        return address(this).balance;\n    }\n\n    function withdraw(uint amount) public onlyOwner {\n        owner.transfer(amount);\n        emit Withdraw(owner,amount);\n    }\n\n\n    receive() external payable{}\n    fallback() external payable{}\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"EtherWallet.sol": {
				"EtherWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"EtherWallet.sol\":57:669  contract EtherWallet {... */\n  mstore(0x40, 0x80)\n    /* \"EtherWallet.sol\":236:293  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"EtherWallet.sol\":275:285  msg.sender */\n  caller\n    /* \"EtherWallet.sol\":259:264  owner */\n  0x00\n  dup1\n    /* \"EtherWallet.sol\":259:286  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"EtherWallet.sol\":57:669  contract EtherWallet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"EtherWallet.sol\":57:669  contract EtherWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"EtherWallet.sol\":381:468  function getBalance() public returns(uint){... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EtherWallet.sol\":474:598  function withdraw(uint amount) public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"EtherWallet.sol\":85:113  address payable public owner */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"EtherWallet.sol\":381:468  function getBalance() public returns(uint){... */\n    tag_12:\n        /* \"EtherWallet.sol\":418:422  uint */\n      0x00\n        /* \"EtherWallet.sol\":440:461  address(this).balance */\n      selfbalance\n        /* \"EtherWallet.sol\":433:461  return address(this).balance */\n      swap1\n      pop\n        /* \"EtherWallet.sol\":381:468  function getBalance() public returns(uint){... */\n      swap1\n      jump\t// out\n        /* \"EtherWallet.sol\":474:598  function withdraw(uint amount) public onlyOwner {... */\n    tag_19:\n        /* \"EtherWallet.sol\":346:356  msg.sender */\n      caller\n        /* \"EtherWallet.sol\":337:356  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EtherWallet.sol\":337:342  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EtherWallet.sol\":337:356  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"EtherWallet.sol\":329:357  require(owner == msg.sender) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"EtherWallet.sol\":532:537  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EtherWallet.sol\":532:546  owner.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EtherWallet.sol\":532:554  owner.transfer(amount) */\n      0x08fc\n        /* \"EtherWallet.sol\":547:553  amount */\n      dup3\n        /* \"EtherWallet.sol\":532:554  owner.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n        /* \"EtherWallet.sol\":578:583  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EtherWallet.sol\":569:591  Withdraw(owner,amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n        /* \"EtherWallet.sol\":584:590  amount */\n      dup3\n        /* \"EtherWallet.sol\":569:591  Withdraw(owner,amount) */\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"EtherWallet.sol\":474:598  function withdraw(uint amount) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"EtherWallet.sol\":85:113  address payable public owner */\n    tag_22:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_33:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_35\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_18:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_38\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":228:347   */\n    tag_38:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_41\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_33\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:629   */\n    tag_42:\n        /* \"#utility.yul\":590:622   */\n      tag_44\n        /* \"#utility.yul\":616:621   */\n      dup2\n        /* \"#utility.yul\":590:622   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":585:588   */\n      dup3\n        /* \"#utility.yul\":578:623   */\n      mstore\n        /* \"#utility.yul\":487:629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":635:753   */\n    tag_46:\n        /* \"#utility.yul\":722:746   */\n      tag_48\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":722:746   */\n      tag_49\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":717:720   */\n      dup3\n        /* \"#utility.yul\":710:747   */\n      mstore\n        /* \"#utility.yul\":635:753   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":759:1013   */\n    tag_24:\n        /* \"#utility.yul\":868:872   */\n      0x00\n        /* \"#utility.yul\":906:908   */\n      0x20\n        /* \"#utility.yul\":895:904   */\n      dup3\n        /* \"#utility.yul\":891:909   */\n      add\n        /* \"#utility.yul\":883:909   */\n      swap1\n      pop\n        /* \"#utility.yul\":919:1006   */\n      tag_51\n        /* \"#utility.yul\":1003:1004   */\n      0x00\n        /* \"#utility.yul\":992:1001   */\n      dup4\n        /* \"#utility.yul\":988:1005   */\n      add\n        /* \"#utility.yul\":979:985   */\n      dup5\n        /* \"#utility.yul\":919:1006   */\n      tag_42\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":759:1013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1019:1241   */\n    tag_14:\n        /* \"#utility.yul\":1112:1116   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1139:1148   */\n      dup3\n        /* \"#utility.yul\":1135:1153   */\n      add\n        /* \"#utility.yul\":1127:1153   */\n      swap1\n      pop\n        /* \"#utility.yul\":1163:1234   */\n      tag_53\n        /* \"#utility.yul\":1231:1232   */\n      0x00\n        /* \"#utility.yul\":1220:1229   */\n      dup4\n        /* \"#utility.yul\":1216:1233   */\n      add\n        /* \"#utility.yul\":1207:1213   */\n      dup5\n        /* \"#utility.yul\":1163:1234   */\n      tag_46\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1019:1241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1328:1432   */\n    tag_45:\n        /* \"#utility.yul\":1373:1380   */\n      0x00\n        /* \"#utility.yul\":1402:1426   */\n      tag_57\n        /* \"#utility.yul\":1420:1425   */\n      dup3\n        /* \"#utility.yul\":1402:1426   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1391:1426   */\n      swap1\n      pop\n        /* \"#utility.yul\":1328:1432   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1438:1564   */\n    tag_58:\n        /* \"#utility.yul\":1475:1482   */\n      0x00\n        /* \"#utility.yul\":1515:1557   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1508:1513   */\n      dup3\n        /* \"#utility.yul\":1504:1558   */\n      and\n        /* \"#utility.yul\":1493:1558   */\n      swap1\n      pop\n        /* \"#utility.yul\":1438:1564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1570:1647   */\n    tag_49:\n        /* \"#utility.yul\":1607:1614   */\n      0x00\n        /* \"#utility.yul\":1636:1641   */\n      dup2\n        /* \"#utility.yul\":1625:1641   */\n      swap1\n      pop\n        /* \"#utility.yul\":1570:1647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1776:1893   */\n    tag_40:\n        /* \"#utility.yul\":1885:1886   */\n      0x00\n        /* \"#utility.yul\":1882:1883   */\n      dup1\n        /* \"#utility.yul\":1875:1887   */\n      revert\n        /* \"#utility.yul\":1899:2021   */\n    tag_36:\n        /* \"#utility.yul\":1972:1996   */\n      tag_65\n        /* \"#utility.yul\":1990:1995   */\n      dup2\n        /* \"#utility.yul\":1972:1996   */\n      tag_49\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1965:1970   */\n      dup2\n        /* \"#utility.yul\":1962:1997   */\n      eq\n        /* \"#utility.yul\":1952:2015   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2011:2012   */\n      0x00\n        /* \"#utility.yul\":2008:2009   */\n      dup1\n        /* \"#utility.yul\":2001:2013   */\n      revert\n        /* \"#utility.yul\":1952:2015   */\n    tag_66:\n        /* \"#utility.yul\":1899:2021   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220584826e8cf11d3734d76481b9ab6d6e1c923de0228f7a7ac9203685d279fd69d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_27": {
									"entryPoint": null,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610340806100606000396000f3fe6080604052600436106100385760003560e01c806312065fe0146100415780632e1a7d4d1461006c5780638da5cb5b146100955761003f565b3661003f57005b005b34801561004d57600080fd5b506100566100c0565b6040516100639190610297565b60405180910390f35b34801561007857600080fd5b50610093600480360381019061008e9190610231565b6100c8565b005b3480156100a157600080fd5b506100aa6101f8565b6040516100b7919061027c565b60405180910390f35b600047905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461012057600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610186573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516101ed9190610297565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061022b816102f3565b92915050565b600060208284031215610247576102466102ee565b5b60006102558482850161021c565b91505092915050565b610267816102b2565b82525050565b610276816102e4565b82525050565b6000602082019050610291600083018461025e565b92915050565b60006020820190506102ac600083018461026d565b92915050565b60006102bd826102c4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6102fc816102e4565b811461030757600080fd5b5056fea2646970667358221220584826e8cf11d3734d76481b9ab6d6e1c923de0228f7a7ac9203685d279fd69d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x340 DUP1 PUSH2 0x60 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x41 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56 PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247 JUMPI PUSH2 0x246 PUSH2 0x2EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x255 DUP5 DUP3 DUP6 ADD PUSH2 0x21C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x267 DUP2 PUSH2 0x2B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x2E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x291 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD DUP3 PUSH2 0x2C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FC DUP2 PUSH2 0x2E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC BASEFEE 0x26 0xE8 0xCF GT 0xD3 PUSH20 0x4D76481B9AB6D6E1C923DE0228F7A7AC9203685D 0x27 SWAP16 0xD6 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:612:0:-:0;;;236:57;;;;;;;;;;275:10;259:5;;:27;;;;;;;;;;;;;;;;;;57:612;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_73": {
									"entryPoint": null,
									"id": 73,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_50": {
									"entryPoint": 192,
									"id": 50,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_3": {
									"entryPoint": 504,
									"id": 3,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_69": {
									"entryPoint": 200,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint256": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2024:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "568:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "585:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "616:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "590:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "590:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "578:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "578:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "578:45:1"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "556:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "563:3:1",
														"type": ""
													}
												],
												"src": "487:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "700:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "717:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "740:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "722:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "722:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "710:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "688:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "695:3:1",
														"type": ""
													}
												],
												"src": "635:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "873:140:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "883:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "895:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "906:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "883:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "979:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1003:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "919:59:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "919:87:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "919:87:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "845:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "857:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "868:4:1",
														"type": ""
													}
												],
												"src": "759:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1127:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1139:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1135:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1127:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1207:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1231:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1216:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1216:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1163:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1163:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1163:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1089:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1112:4:1",
														"type": ""
													}
												],
												"src": "1019:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1287:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1297:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1313:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1307:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1297:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1280:6:1",
														"type": ""
													}
												],
												"src": "1247:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1381:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1391:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1420:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1402:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1402:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1391:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1363:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1373:7:1",
														"type": ""
													}
												],
												"src": "1328:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1483:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1493:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1508:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1515:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1504:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1493:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1465:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1475:7:1",
														"type": ""
													}
												],
												"src": "1438:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1615:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1625:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1636:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1625:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1597:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1607:7:1",
														"type": ""
													}
												],
												"src": "1570:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1742:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1759:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1762:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1752:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1752:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1653:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1865:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1882:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1875:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1776:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1942:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1999:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2008:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2011:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2001:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2001:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2001:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1965:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1990:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1972:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1972:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1962:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1962:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:43:1"
															},
															"nodeType": "YulIf",
															"src": "1952:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1935:5:1",
														"type": ""
													}
												],
												"src": "1899:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100385760003560e01c806312065fe0146100415780632e1a7d4d1461006c5780638da5cb5b146100955761003f565b3661003f57005b005b34801561004d57600080fd5b506100566100c0565b6040516100639190610297565b60405180910390f35b34801561007857600080fd5b50610093600480360381019061008e9190610231565b6100c8565b005b3480156100a157600080fd5b506100aa6101f8565b6040516100b7919061027c565b60405180910390f35b600047905090565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461012057600080fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610186573d6000803e3d6000fd5b5060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364826040516101ed9190610297565b60405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061022b816102f3565b92915050565b600060208284031215610247576102466102ee565b5b60006102558482850161021c565b91505092915050565b610267816102b2565b82525050565b610276816102e4565b82525050565b6000602082019050610291600083018461025e565b92915050565b60006020820190506102ac600083018461026d565b92915050565b60006102bd826102c4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b6102fc816102e4565b811461030757600080fd5b5056fea2646970667358221220584826e8cf11d3734d76481b9ab6d6e1c923de0228f7a7ac9203685d279fd69d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x38 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x41 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x6C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI PUSH2 0x3F JUMP JUMPDEST CALLDATASIZE PUSH2 0x3F JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56 PUSH2 0xC0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63 SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x231 JUMP JUMPDEST PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAA PUSH2 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x27C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x186 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x22B DUP2 PUSH2 0x2F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247 JUMPI PUSH2 0x246 PUSH2 0x2EE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x255 DUP5 DUP3 DUP6 ADD PUSH2 0x21C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x267 DUP2 PUSH2 0x2B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x276 DUP2 PUSH2 0x2E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x291 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BD DUP3 PUSH2 0x2C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FC DUP2 PUSH2 0x2E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC BASEFEE 0x26 0xE8 0xCF GT 0xD3 PUSH20 0x4D76481B9AB6D6E1C923DE0228F7A7AC9203685D 0x27 SWAP16 0xD6 SWAP14 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:612:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;381:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;474:124;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;85:28;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;381:87;418:4;440:21;433:28;;381:87;:::o;474:124::-;346:10;337:19;;:5;;;;;;;;;;:19;;;329:28;;;;;;532:5:::1;::::0;::::1;;;;;;;;:14;;:22;547:6;532:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;578:5;::::0;::::1;;;;;;;;569:22;;;584:6;569:22;;;;;;:::i;:::-;;;;;;;;474:124:::0;:::o;85:28::-;;;;;;;;;;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:142::-;590:32;616:5;590:32;:::i;:::-;585:3;578:45;487:142;;:::o;635:118::-;722:24;740:5;722:24;:::i;:::-;717:3;710:37;635:118;;:::o;759:254::-;868:4;906:2;895:9;891:18;883:26;;919:87;1003:1;992:9;988:17;979:6;919:87;:::i;:::-;759:254;;;;:::o;1019:222::-;1112:4;1150:2;1139:9;1135:18;1127:26;;1163:71;1231:1;1220:9;1216:17;1207:6;1163:71;:::i;:::-;1019:222;;;;:::o;1328:104::-;1373:7;1402:24;1420:5;1402:24;:::i;:::-;1391:35;;1328:104;;;:::o;1438:126::-;1475:7;1515:42;1508:5;1504:54;1493:65;;1438:126;;;:::o;1570:77::-;1607:7;1636:5;1625:16;;1570:77;;;:::o;1776:117::-;1885:1;1882;1875:12;1899:122;1972:24;1990:5;1972:24;:::i;:::-;1965:5;1962:35;1952:63;;2011:1;2008;2001:12;1952:63;1899:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "166400",
								"executionCost": "24474",
								"totalCost": "190874"
							},
							"external": {
								"": "129",
								"getBalance()": "317",
								"owner()": "2533",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 669,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 669,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 669,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 293,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 236,
									"end": 293,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 236,
									"end": 293,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 236,
									"end": 293,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 275,
									"end": 285,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 259,
									"end": 264,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 264,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 259,
									"end": 286,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 259,
									"end": 286,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 259,
									"end": 286,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 259,
									"end": 286,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 669,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 669,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 669,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 669,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220584826e8cf11d3734d76481b9ab6d6e1c923de0228f7a7ac9203685d279fd69d64736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 669,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 669,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 418,
											"end": 422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 461,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 433,
											"end": 461,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 433,
											"end": 461,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 381,
											"end": 468,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 356,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 337,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 342,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 337,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 337,
											"end": 342,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 337,
											"end": 342,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 337,
											"end": 342,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 337,
											"end": 342,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 342,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 337,
											"end": 356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 329,
											"end": 357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 329,
											"end": 357,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 329,
											"end": 357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 357,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 329,
											"end": 357,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 329,
											"end": 357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 537,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 546,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 532,
											"end": 546,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 547,
											"end": 553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 532,
											"end": 554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 532,
											"end": 554,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 578,
											"end": 583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 578,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 591,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 584,
											"end": 590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 569,
											"end": 591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 569,
											"end": 591,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 569,
											"end": 591,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 569,
											"end": 591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 569,
											"end": 591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 569,
											"end": 591,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 474,
											"end": 598,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 85,
											"end": 113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 85,
											"end": 113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 487,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 590,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 616,
											"end": 621,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 590,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 590,
											"end": 622,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 590,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 590,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 585,
											"end": 588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 578,
											"end": 623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 629,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 635,
											"end": 753,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 635,
											"end": 753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 722,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 722,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 710,
											"end": 747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 635,
											"end": 753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 635,
											"end": 753,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 759,
											"end": 1013,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 868,
											"end": 872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 891,
											"end": 909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 883,
											"end": 909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 883,
											"end": 909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1003,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 992,
											"end": 1001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1005,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 979,
											"end": 985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 919,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 919,
											"end": 1006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 1006,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 919,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 759,
											"end": 1013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 759,
											"end": 1013,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 759,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 1013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 759,
											"end": 1013,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1019,
											"end": 1241,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1019,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1116,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1135,
											"end": 1153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1231,
											"end": 1232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1207,
											"end": 1213,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1163,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1163,
											"end": 1234,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1234,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1163,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1241,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1019,
											"end": 1241,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1328,
											"end": 1432,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1328,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1432,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1432,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1438,
											"end": 1564,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1438,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1475,
											"end": 1482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1508,
											"end": 1513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1504,
											"end": 1558,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1607,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1647,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1776,
											"end": 1893,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1885,
											"end": 1886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1887,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2021,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1899,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1990,
											"end": 1995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1972,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1965,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1997,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2001,
											"end": 2013,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1952,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 2021,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"owner()": "8da5cb5b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"EtherWallet.sol\":\"EtherWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EtherWallet.sol\":{\"keccak256\":\"0xec5bc508bc7225a7ddfb9ff18fc8ee49cfb74ed7a0c75991226f1fbde088ebf7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ad179d8d604166cd22064cae722491b16ae513ce4e594b1f5f72d60b97b4fb4\",\"dweb:/ipfs/QmcS9wWkxUWjnUUg5ELt3b2oVN3YgghofGMCrRTKq4tqMU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "EtherWallet.sol:EtherWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to view\n  --> EtherWallet.sol:21:5:\n   |\n21 |     function getBalance() public returns(uint){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to view",
				"severity": "warning",
				"sourceLocation": {
					"end": 468,
					"file": "EtherWallet.sol",
					"start": 381
				},
				"type": "Warning"
			}
		],
		"sources": {
			"EtherWallet.sol": {
				"ast": {
					"absolutePath": "EtherWallet.sol",
					"exportedSymbols": {
						"EtherWallet": [
							78
						]
					},
					"id": 79,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 78,
							"linearizedBaseContracts": [
								78
							],
							"name": "EtherWallet",
							"nameLocation": "66:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "108:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 78,
									"src": "85:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "85:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 9,
									"name": "Deposit",
									"nameLocation": "126:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "150:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "134:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "134:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "164:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "159:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "159:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "133:38:0"
									},
									"src": "120:52:0"
								},
								{
									"anonymous": false,
									"id": 15,
									"name": "Withdraw",
									"nameLocation": "183:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "208:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "192:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "222:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "217:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:38:0"
									},
									"src": "177:53:0"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "249:44:0",
										"statements": [
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 18,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "259:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "275:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "275:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "267:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 19,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "267:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "267:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "259:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "259:27:0"
											}
										]
									},
									"id": 27,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "247:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:0:0"
									},
									"scope": 78,
									"src": "236:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "319:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 30,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "337:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 31,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "346:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "346:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "337:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 29,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "329:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "329:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "329:28:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "367:1:0"
											}
										]
									},
									"id": 38,
									"name": "onlyOwner",
									"nameLocation": "308:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:2:0"
									},
									"src": "299:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "423:45:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 45,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "448:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_EtherWallet_$78",
																	"typeString": "contract EtherWallet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_EtherWallet_$78",
																	"typeString": "contract EtherWallet"
																}
															],
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 43,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "440:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 46,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "440:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "440:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 42,
												"id": 48,
												"nodeType": "Return",
												"src": "433:28:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 50,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "418:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "418:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "417:6:0"
									},
									"scope": 78,
									"src": "381:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "522:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 60,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "547:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 57,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "532:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "532:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "532:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "532:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 64,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "578:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 65,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 52,
															"src": "584:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 63,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "569:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "569:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "EmitStatement",
												"src": "564:27:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 55,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 54,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "512:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "512:9:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "483:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "497:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "492:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:13:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "522:0:0"
									},
									"scope": 78,
									"src": "474:124:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "631:2:0",
										"statements": []
									},
									"id": 73,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:0:0"
									},
									"scope": 78,
									"src": "605:28:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "665:2:0",
										"statements": []
									},
									"id": 77,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:0:0"
									},
									"scope": 78,
									"src": "638:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 79,
							"src": "57:612:0",
							"usedErrors": []
						}
					],
					"src": "32:639:0"
				},
				"id": 0
			}
		}
	}
}