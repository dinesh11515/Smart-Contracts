{
	"id": "9c56a1eb22365825401be7009332f52f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"EtherWallet.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ncontract EtherWallet {\n\n    address payable owner;\n\n    constructor(){\n        owner = payable(msg.sender);\n    }\n\n\n    receive() external payable{}\n    fallback() external payable{}\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"EtherWallet.sol": {
				"EtherWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"EtherWallet.sol\":57:241  contract EtherWallet {... */\n  mstore(0x40, 0x80)\n    /* \"EtherWallet.sol\":113:170  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"EtherWallet.sol\":152:162  msg.sender */\n  caller\n    /* \"EtherWallet.sol\":136:141  owner */\n  0x00\n  dup1\n    /* \"EtherWallet.sol\":136:163  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"EtherWallet.sol\":57:241  contract EtherWallet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"EtherWallet.sol\":57:241  contract EtherWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n\n    auxdata: 0xa2646970667358221220ee432fddcbc106858a74ff1840c2b7886e049795be603351d7e39936eb34becf64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604280605d6000396000f3fe608060405236600a57005b00fea2646970667358221220ee432fddcbc106858a74ff1840c2b7886e049795be603351d7e39936eb34becf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x42 DUP1 PUSH1 0x5D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0xA JUMPI STOP JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE NUMBER 0x2F 0xDD 0xCB 0xC1 MOD DUP6 DUP11 PUSH21 0xFF1840C2B7886E049795BE603351D7E39936EB34BE 0xCF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:184:0:-:0;;;113:57;;;;;;;;;;152:10;136:5;;:27;;;;;;;;;;;;;;;;;;57:184;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_19": {
									"entryPoint": null,
									"id": 19,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405236600a57005b00fea2646970667358221220ee432fddcbc106858a74ff1840c2b7886e049795be603351d7e39936eb34becf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0xA JUMPI STOP JUMPDEST STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE NUMBER 0x2F 0xDD 0xCB 0xC1 MOD DUP6 DUP11 PUSH21 0xFF1840C2B7886E049795BE603351D7E39936EB34BE 0xCF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "57:184:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "13200",
								"executionCost": "24335",
								"totalCost": "37535"
							},
							"external": {
								"": "34"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 241,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 241,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 241,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 170,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 162,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 136,
									"end": 141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 136,
									"end": 163,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 136,
									"end": 163,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 136,
									"end": 163,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 241,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 241,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 241,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 241,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 241,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 241,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 241,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ee432fddcbc106858a74ff1840c2b7886e049795be603351d7e39936eb34becf64736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 241,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 241,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 241,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 241,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 241,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 241,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 241,
											"name": "STOP",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"EtherWallet.sol\":\"EtherWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EtherWallet.sol\":{\"keccak256\":\"0xe3a343ae094735fc0e14cced4c68d6309a51575d1a68cf38e2f917e956c483e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://745f90cb0e90b30bee98f7e2d10be5f80817647464f10326d7d24097ae4a51da\",\"dweb:/ipfs/QmWWLsHHvEv3enRg3XN9unrFyCuJpv2ijeXuFg5SiLWLDZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "EtherWallet.sol:EtherWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"EtherWallet.sol": {
				"ast": {
					"absolutePath": "EtherWallet.sol",
					"exportedSymbols": {
						"EtherWallet": [
							24
						]
					},
					"id": 25,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 24,
							"linearizedBaseContracts": [
								24
							],
							"name": "EtherWallet",
							"nameLocation": "66:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "101:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 24,
									"src": "85:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "85:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "126:44:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "136:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "152:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "152:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "144:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 7,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "144:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "144:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "136:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "136:27:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:0"
									},
									"scope": 24,
									"src": "113:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "203:2:0",
										"statements": []
									},
									"id": 19,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "184:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:0:0"
									},
									"scope": 24,
									"src": "177:28:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "237:2:0",
										"statements": []
									},
									"id": 23,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "237:0:0"
									},
									"scope": 24,
									"src": "210:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 25,
							"src": "57:184:0",
							"usedErrors": []
						}
					],
					"src": "32:211:0"
				},
				"id": 0
			}
		}
	}
}