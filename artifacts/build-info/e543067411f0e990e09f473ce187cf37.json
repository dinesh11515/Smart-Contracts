{
	"id": "e543067411f0e990e09f473ce187cf37",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"EtherWallet.sol": {
				"content": "//SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\ncontract EtherWallet {\n\n    address payable owner;\n\n    constructor(){\n        owner = payable(msg.sender);\n    }\n\n    modifier onlyOwner(){\n        require(owner == msg.sender);\n        _;\n    }\n\n    function withdraw() public onlyOwner {\n\n    }\n\n\n    receive() external payable{}\n    fallback() external payable{}\n}\n\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"EtherWallet.sol": {
				"EtherWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"EtherWallet.sol\":57:374  contract EtherWallet {... */\n  mstore(0x40, 0x80)\n    /* \"EtherWallet.sol\":113:170  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"EtherWallet.sol\":152:162  msg.sender */\n  caller\n    /* \"EtherWallet.sol\":136:141  owner */\n  0x00\n  dup1\n    /* \"EtherWallet.sol\":136:163  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"EtherWallet.sol\":57:374  contract EtherWallet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"EtherWallet.sol\":57:374  contract EtherWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3ccfd60b\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \"EtherWallet.sol\":258:303  function withdraw() public onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n    tag_10:\n        /* \"EtherWallet.sol\":223:233  msg.sender */\n      caller\n        /* \"EtherWallet.sol\":214:233  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EtherWallet.sol\":214:219  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"EtherWallet.sol\":214:233  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"EtherWallet.sol\":206:234  require(owner == msg.sender) */\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n        /* \"EtherWallet.sol\":258:303  function withdraw() public onlyOwner {... */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220177015b4be157e15c2bc819cb65a0ae5b9e29edc10a0a6f8c495a184e7c97d0b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060ca8061005f6000396000f3fe608060405260043610601f5760003560e01c80633ccfd60b146027576025565b36602557005b005b348015603257600080fd5b506039603b565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614609257600080fd5b56fea2646970667358221220177015b4be157e15c2bc819cb65a0ae5b9e29edc10a0a6f8c495a184e7c97d0b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xCA DUP1 PUSH2 0x5F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH1 0x27 JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x39 PUSH1 0x3B JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH17 0x15B4BE157E15C2BC819CB65A0AE5B9E29E 0xDC LT LOG0 0xA6 0xF8 0xC4 SWAP6 LOG1 DUP5 0xE7 0xC9 PUSH30 0xB64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "57:317:0:-:0;;;113:57;;;;;;;;;;152:10;136:5;;:27;;;;;;;;;;;;;;;;;;57:317;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_36": {
									"entryPoint": null,
									"id": 36,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_32": {
									"entryPoint": 59,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c80633ccfd60b146027576025565b36602557005b005b348015603257600080fd5b506039603b565b005b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614609257600080fd5b56fea2646970667358221220177015b4be157e15c2bc819cb65a0ae5b9e29edc10a0a6f8c495a184e7c97d0b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3CCFD60B EQ PUSH1 0x27 JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x39 PUSH1 0x3B JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH1 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR PUSH17 0x15B4BE157E15C2BC819CB65A0AE5B9E29E 0xDC LT LOG0 0xA6 0xF8 0xC4 SWAP6 LOG1 DUP5 0xE7 0xC9 PUSH30 0xB64736F6C63430008070033000000000000000000000000000000000000 ",
							"sourceMap": "57:317:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;258:45;;;;;;;;;;;;;:::i;:::-;;;223:10;214:19;;:5;;;;;;;;;;:19;;;206:28;;;;;;258:45::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "40400",
								"executionCost": "24359",
								"totalCost": "64759"
							},
							"external": {
								"": "85",
								"withdraw()": "2289"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 374,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 170,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 113,
									"end": 170,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 113,
									"end": 170,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 113,
									"end": 170,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 152,
									"end": 162,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 136,
									"end": 141,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 136,
									"end": 141,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 136,
									"end": 163,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 136,
									"end": 163,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 136,
									"end": 163,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 136,
									"end": 163,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 374,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 374,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 374,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 374,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 374,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 374,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220177015b4be157e15c2bc819cb65a0ae5b9e29edc10a0a6f8c495a184e7c97d0b64736f6c63430008070033",
									".code": [
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57,
											"end": 374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57,
											"end": 374,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 258,
											"end": 303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 233,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 214,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 219,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 214,
											"end": 219,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 219,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 219,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 214,
											"end": 233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 214,
											"end": 233,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 206,
											"end": 234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 206,
											"end": 234,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 258,
											"end": 303,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"EtherWallet.sol\":\"EtherWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"EtherWallet.sol\":{\"keccak256\":\"0x46ba80cc0d42cd1ca46ebbb4f9199f861da488cb9080172736e0b3e06026d05c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b255b5f7d9c84377d2e36824f587ca5e3976f60a00856e0fd6734f862fc9c156\",\"dweb:/ipfs/QmbaGYxVUgDqnz2s4jL3mavQquyu8AyLdbWA37Pao7T7VY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "EtherWallet.sol:EtherWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"EtherWallet.sol": {
				"ast": {
					"absolutePath": "EtherWallet.sol",
					"exportedSymbols": {
						"EtherWallet": [
							41
						]
					},
					"id": 42,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "EtherWallet",
							"nameLocation": "66:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "101:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 41,
									"src": "85:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "85:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "126:44:0",
										"statements": [
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "136:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 9,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "152:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "152:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "144:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 7,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "144:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "144:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "136:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "136:27:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "124:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "126:0:0"
									},
									"scope": 41,
									"src": "113:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "196:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 18,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "214:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 19,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "223:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "223:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "214:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "206:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "206:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "206:28:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "244:1:0"
											}
										]
									},
									"id": 26,
									"name": "onlyOwner",
									"nameLocation": "185:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "194:2:0"
									},
									"src": "176:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "295:8:0",
										"statements": []
									},
									"functionSelector": "3ccfd60b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 26,
												"src": "285:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "285:9:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "267:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "275:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "295:0:0"
									},
									"scope": 41,
									"src": "258:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "336:2:0",
										"statements": []
									},
									"id": 36,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "317:2:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "336:0:0"
									},
									"scope": 41,
									"src": "310:28:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "370:2:0",
										"statements": []
									},
									"id": 40,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "351:2:0"
									},
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "370:0:0"
									},
									"scope": 41,
									"src": "343:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 42,
							"src": "57:317:0",
							"usedErrors": []
						}
					],
					"src": "32:344:0"
				},
				"id": 0
			}
		}
	}
}